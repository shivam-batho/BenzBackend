# Generated by Django 5.0.2 on 2024-02-21 16:55

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee', models.CharField(db_column='employee_id', default='EMP-001', max_length=255, null=True, unique=True)),
                ('name', models.CharField(db_column='employee_name', max_length=255)),
                ('email', models.CharField(db_column='employee_email', max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('country_code', models.CharField(blank=True, max_length=3, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=13, null=True)),
                ('deleted', models.BooleanField(db_column='is_deleted', default=False)),
                ('profile_pic', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'tbl_users',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfoDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('user_role', models.IntegerField(choices=[(1, 'super_admin'), (2, 'admin'), (3, 'manager'), (4, 'report_handler'), (5, 'sales_manager'), (6, 'user')], default=6)),
                ('gender', models.CharField(max_length=10, null=True)),
                ('dob', models.DateField()),
                ('doj', models.DateField()),
                ('experience', models.FloatField(db_column='yers_exper', default='Fresher')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='userInfo', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_user_details',
                'managed': True,
            },
        ),
    ]
